<sequence_node size='3'>
  <variable_declaration_node name='x' qualifier='private' type='integer'>
  <initializer>
      <integer_node>10</integer_node>
  </initializer>
  </variable_declaration_node>
  <variable_declaration_node name='y' qualifier='private' type='integer'>
  <initializer>
      <integer_node>3</integer_node>
  </initializer>
  </variable_declaration_node>
  <function_definition_node name='fir' qualifier='public' type='integer'>
    <arguments>
      <sequence_node size='0'>
      </sequence_node>
    </arguments>
    <body_node>
      <block>
        <block_node>
          <declarations>
          </declarations>
          <instructions>
            <sequence_node size='1'>
              <print_node newline='1'>
                <sequence_node size='1'>
                  <and_node>
                    <eq_node>
                      <rvalue_node>
                          <variable_node>x</variable_node>
                      </rvalue_node>
                      <rvalue_node>
                          <variable_node>y</variable_node>
                      </rvalue_node>
                    </eq_node>
                    <ne_node>
                      <rvalue_node>
                          <variable_node>x</variable_node>
                      </rvalue_node>
                      <rvalue_node>
                          <variable_node>y</variable_node>
                      </rvalue_node>
                    </ne_node>
                  </and_node>
                </sequence_node>
              </print_node>
            </sequence_node>
          </instructions>
        </block_node>
      </block>
      <epilogue>
      </epilogue>
    </body_node>
    <return_value>
      <integer_node>0</integer_node>
    </return_value>
  </function_definition_node>
</sequence_node>
